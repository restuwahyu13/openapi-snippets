{
	"Full Open API 3.0": {
		"prefix": "swa:initialize",
		"body": [
			"openapi: 3.0.0",
			"info:",
			"  title: ${1:Backend API}",
			"  description: ${2:Backend Server API version 1}",
			"  version: ${3:1.0.0}",
			"  contact:",
			"    name: ${4:john doe}",
			"    email: ${5:johndoe@gmail.com}",
			"servers:",
			"  - url: ${6:${protocol}/${host}",
			"    description: ${7:${description}}",
			"    variables:",
			"     host:",
			"      default:${8:google.com}",
			"      enum:",
			"       - google.com",
			"       - google.staging.com",
			"       - google.dev.com",
			"     protocol:",
			"      default:${9:htps}",
			"      enum:",
			"       - http",
			"       - https",
			"     description:",
			"      default:${10:this is production server}",
			"      enum:",
			"       - this is production server",
			"       - this is staging server",
			"       - this is development server",
			"paths:",
			"/${11:api}:",
			"  ${12:get}:",
			"    tags:",
			"      - ${13:auth route}",
			"    description:${14:'Example Swagger'}",
			"    summary:${15:'Swagger Provider'}",
			"    security:",
			"      bearerAuth:${16:[]}",
			"    requestBody:",
			"      required:${17:true}",
			"      content:",
			"       ${18:application/json}",
			"        schema:",
			"         type:${19:object}",
			"         properties:",
			"          email:",
			"           type:${20:string}",
			"          password:",
			"           type:${21:string}",
			"        required:${22:true}",
			"        example:",
			"         email:${23:'example@gmail.com'}",
			"         password:${24:'qwerty12'}",
			"    responses:",
			"     200:",
			"      description:${25:'OK'}",
			"     400:",
			"      description:|",
			"       '${26:'Email is required'}'",
			"       '${27:'Password is required'}"
		],
		"description": "Generate Initialize Open API 3.0"
	},
	"Basic Path": {
		"prefix": "swa:path",
		"body": ["/${1:api}:", "  ${2:get}:", "    description: ${3:'Example Swagger'}", "    summary: ${4:'Swagger Provider'}"],
		"description": "Basic Path"
	},
	"Basic Path With Tags": {
		"prefix": "swa:path:tags",
		"body": [
			"/${1:api}:",
			"  ${2:get}:",
			"    tags:",
			"     - ${3:auth route}",
			"    description: ${4:'Example Swagger'}",
			"    summary: ${5:'Swagger Provider'}"
		],
		"description": "Generate Basic Path With Tags"
	},
	"Basic Path With Security": {
		"prefix": "swa:path:security",
		"body": [
			"/${1:api}:",
			"  ${2:get}:",
			"    description: ${3:'Example Swagger'}",
			"    summary: ${4:'Swagger Provider'}",
			"    security:",
			"     - bearerAuth: ${5:[]}",
			"",
			"securitySchemes:",
			" bearerAuth:",
			"  format: ${6:http}",
			"  scheme: ${7:bearer}",
			"  bearerFormat: ${8:JWT}"
		],
		"description": "Generate Basic Path With Security"
	},
	"Basic Path With Request Body": {
		"prefix": "swa:path:request",
		"body": [
			"/${1:api}:",
			"  ${2:get}:",
			"    description: ${3:'Example Swagger'}",
			"    summary: ${4:'Swagger Provider'}",
			"    requestBody:",
			"      required:${5:true}",
			"      content-type:",
			"       ${6:application/json}",
			"        schema:",
			"         type:${7:object}",
			"         properties:",
			"          email:",
			"           type:${8:string}",
			"          password:",
			"           type:${9:string}",
			"        required:${10:true}",
			"        example:",
			"         email:${11:'example@gmail.com'}",
			"         password:${12:'qwerty12'}"
		],
		"description": "Generate Basic Path With Body"
	},
	"Basic Path With Response": {
		"prefix": "swa:path:response",
		"body": [
			"/${1:api}:",
			"  ${2:get}:",
			"    description: ${3:'Example Swagger'}",
			"    summary: ${4:'Swagger Provider'}",
			"    responses:",
			"     200:",
			"      description:${5:'OK'}",
			"     400:",
			"      description:|",
			"       '${6:'Email is required'}'",
			"       '${7:'Password is required'}"
		],
		"description": "Generate Basic Path With Response"
	},
	"Full Path Body Basic": {
		"prefix": "swa:full:path:body",
		"body": [
			"/${1:api}:",
			"  ${2:get}:",
			"    tags:",
			"      - ${3:auth route}",
			"    description: ${4:'Example Swagger'}",
			"    summary: ${5:'Swagger Provider'}",
			"    security:",
			"      bearerAuth:${6:[]}",
			"    requestBody:",
			"      required:${7:true}",
			"      content:",
			"       ${8:application/json}",
			"        schema:",
			"         type:${9:object}",
			"         properties:",
			"          email:",
			"           type:${10:string}",
			"          password:",
			"           type:${11:string}",
			"        required:${12:true}",
			"        example:",
			"         email:${13:'example@gmail.com'}",
			"         password:${14:'qwerty12'}",
			"    responses:",
			"     200:",
			"      description:${15:'OK'}",
			"     400:",
			"      description:|",
			"       '${16:'Email is required'}'",
			"       '${17:'Password is required'}"
		],
		"description": "Generate Full Path Body Basic"
	},
	"Full Path Body Basic Custom": {
		"prefix": "swa:full:path:body:custom",
		"body": [
			"/${1:api}:",
			"  ${2:get}:",
			"    tags:",
			"      - ${3:auth route}",
			"    description: ${4:'Example Swagger'}",
			"    summary: ${5:'Swagger Provider'}",
			"    security:",
			"      bearerAuth:${6:[]}",
			"    requestBody:",
			"      required:${7:true}",
			"      content:",
			"       ${8:application/json}",
			"        schema:",
			"         $ref:${9:'/#components/schemas/UserLogin'}",
			"        required:${10:true}",
			"        example:",
			"         email:${11:'example@gmail.com'}",
			"         password:${12:'qwerty12'}",
			"    responses:",
			"     200:",
			"      description:${13:'OK'}",
			"     400:",
			"      description:|",
			"       '${14:'Email is required'}'",
			"       '${15:'Password is required'}",
			"",
			"components:",
			" schemas:",
			"   UserLogin:",
			"    type:${16:object}",
			"    properties:",
			"     email:",
			"      type:${17:string}",
			"     password:",
			"      type:${18:string}",
			"   required:${19:true}"
		],
		"description": "Generate Full Path Basic Body Custom"
	},
	"Full Path Parameter Basic": {
		"prefix": "swa:full:path:parameter",
		"body": [
			"/${1:api}:",
			"  ${2:get}:",
			"    tags:",
			"      - ${3:auth route}",
			"    description: ${4:'Example Swagger'}",
			"    summary: ${5:'Swagger Provider'}",
			"    security:",
			"      bearerAuth:${6:[]}",
			"    parameters:",
			"     - in: ${7:path}",
			"       name: ${8:id}",
			"       description: ${9:description}",
			"       required: ${10:true}",
			"       deprecated: ${11:false}",
			"       allowEmptyValue: ${12:false}",
			"       schema:",
			"        type: ${13:string}",
			"        required: ${14:true}",
			"       example:",
			"         id:${15:'2d9c801a-0f0a-4aef-8ee6-0f04178aa42e'}",
			"    responses:",
			"     200:",
			"      description:${16:'OK'}",
			"     400:",
			"      description:|",
			"       '${17:'Email is required'}'",
			"       '${18:'Password is required'}"
		],
		"description": "Generate Full Path Parameter Basic"
	},
	"Full Path Basic Parameter Custom": {
		"prefix": "swa:full:path:param:custom",
		"body": [
			"/${1:api}:",
			"  ${2:get}:",
			"    tags:",
			"      - ${3:auth route}",
			"    description: ${4:'Example Swagger'}",
			"    summary: ${5:'Swagger Provider'}",
			"    security:",
			"      bearerAuth:${6:[]}",
			"    parameters:",
			"      - in: ${1:path}",
			"        name: ${2:id}",
			"        description: ${3:description}",
			"        required: ${4:true}",
			"        deprecated: ${5:false}",
			"        allowEmptyValue: ${6:false}",
			"        schema:",
			"         $ref: ${7:'/#components/schemas/FindUserById'}",
			"    responses:",
			"     200:",
			"      description:${13:'OK'}",
			"     400:",
			"      description:|",
			"       '${14:'userId is required'}'",
			"       '${15:'userId must be uuid'}",
			"",
			"components:",
			" schemas:",
			"   FindUserById:",
			"    type:${16:object}",
			"    properties:",
			"     id:",
			"      type:${17:string}",
			"      format:${18:uid}",
			"   required:${19:true}"
		],
		"description": "Generate Full Path Basic Parameter Custom"
	},
	"Parameter Path": {
		"prefix": "swa:param:path",
		"body": [
			"parameters:",
			"  - in: ${1:path}",
			"    name: ${2:id}",
			"    description: ${3:description}",
			"    required: ${4:false}",
			"    deprecated: ${5:false}",
			"    allowEmptyValue: ${6:false}",
			"    schema:",
			"      type: ${7:string}",
			"      required: ${8:true}"
		],
		"description": "Generate Parameter Path"
	},
	"Parameter Query": {
		"prefix": "swa:param:query",
		"body": [
			"parameters:",
			"  - in: ${1:query}",
			"    name: ${2:id}",
			"    description: ${3:description}",
			"    required: ${4:true}",
			"    deprecated: ${5:false}",
			"    allowEmptyValue: ${6:false}",
			"    schema:",
			"      type: ${7:string}",
			"      required: ${8:true}"
		],
		"description": "Generate Parameter Query"
	},
	"Parameter Header": {
		"prefix": "swa:param:header",
		"body": [
			"parameters:",
			"  - in: ${1:header}",
			"    name: ${2:authorization}",
			"    description: ${3:description}",
			"    required: ${4:true}",
			"    deprecated: ${5:false}",
			"    allowEmptyValue: ${6:false}",
			"    schema:",
			"      type: ${7:string}",
			"      required: ${8:true}"
		],
		"description": "Generate Parameter Query"
	},
	"Parameter Cookie": {
		"prefix": "swa:param:cookie",
		"body": [
			"parameters:",
			"  - in: ${1:cookie}",
			"    name: ${2:name}",
			"    description: ${3:description}",
			"    required: ${4:true}",
			"    deprecated: ${5:false}",
			"    allowEmptyValue: ${6:false}",
			"    schema:",
			"      type: ${7:string}",
			"      required: ${8:true}"
		],
		"description": "Generate Parameter Cookie"
	},
	"Request Body Json": {
		"prefix": "swa:req:body:json",
		"body": [
			"requestBody:",
			"  required: ${1:true}",
			"  content:",
			"    ${2:application/json}:",
			"      schema:",
			"        type:${3:object}",
			"        properties:",
			"          name:",
			"           type:${4:string}",
			"          age:",
			"           type:${5:integer}",
			"        required:${6:trye}",
			"      example:",
			"       email:${7:'example@gmail.com'}",
			"       password:${8:'qwerty12'}"
		],
		"description": "Generate Request Body Content Json"
	},
	"Request Body Upload": {
		"prefix": "swa:req:body:upload",
		"body": [
			"requestBody:",
			"  required: ${1:true}",
			"  content:",
			"    ${2:multipart/form-data}:",
			"      schema:",
			"        properties:",
			"          file:",
			"           type:${4:array}",
			"           items:",
			"            type:${5:string}",
			"            format:${6:binary}",
			"        required:${6:true}"
		],
		"description": "Generate Request Body Upload"
	},
	"Request Body Form Data": {
		"prefix": "swa:req:body:form:data",
		"body": [
			"requestBody:",
			"  required: ${1:true}",
			"  content:",
			"    ${2:multipart/form-data}:",
			"      schema:",
			"       type:${3:object}",
			"       properties:",
			"         name:",
			"          type:${4:string}",
			"         password:",
			"          type:${5:string}",
			"       required:${6:true}",
			"      example:",
			"       email:${7:'example@gmail.com'}",
			"       password:${8:'qwerty12'}"
		],
		"description": "Generate Request Body Content Form Data"
	},
	"Request Body URL Encoded": {
		"prefix": "swa:req:body:url:encoded",
		"body": [
			"requestBody:",
			"  required: ${1:true}",
			"  content:",
			"    ${2:multipart/form-data}:",
			"      schema:",
			"       type:${3:object}",
			"       properties:",
			"         name:",
			"          type:${4:string}",
			"         password:",
			"          type:${5:string}",
			"       required:${6:true}",
			"      example:",
			"       email:${7:'example@gmail.com'}",
			"       password:${8:'qwerty12'}"
		],
		"description": "Generate Request Body Content URL Encoded"
	},
	"Request Body Text": {
		"prefix": "swa:req:body:text",
		"body": [
			"requestBody:",
			"  required: ${1:true}",
			"  content:",
			"    ${2:text/plain}:",
			"      schema:",
			"       type:${3:object}",
			"       properties:",
			"         name:",
			"          type:${4:string}",
			"         password:",
			"          type:${5:string}",
			"       required:${6:true}",
			"      example:",
			"       email:${7:'example@gmail.com'}",
			"       password:${8:'qwerty12'}"
		],
		"description": "Generate Request Body Content Text"
	},
	"Request Body Custom": {
		"prefix": "swa:req:body:custom",
		"body": [
			"requestBody:",
			"  required: ${1:true}",
			"  content:",
			"    ${2:application/json}:",
			"      schema:",
			"        $ref:${3:'/#components/schemas/UserLogin'}",
			"",
			"components:",
			" schemas:",
			"   UserLogin:",
			"    type:${16:object}",
			"    properties:",
			"     email:",
			"      type:${17:string}",
			"     password:",
			"      type:${18:string}",
			"   required:${19:true}"
		],
		"description": "Generate Request Body Custom"
	},
	"Response": {
		"prefix": "swa:res",
		"body": [
			"responses:",
			" 200:",
			"  description:${1:'OK'}",
			" 400:",
			"  description:|",
			"   '${2:'Email is required'}'",
			"   '${3:'Password is required'}"
		],
		"description": "Generate Response"
	},
	"Single Example": {
		"prefix": "swa:single:example",
		"body": [
			"responses:",
			" 200:",
			"  description:${1:'OK'}",
			" 400:",
			"  description:|",
			"   '${2:'Email is required'}'",
			"   '${3:'Password is required'}"
		],
		"description": "Generate Single Example"
	},
	"Multiple Example": {
		"prefix": "swa:multiple:example",
		"body": [
			"responses:",
			" 200:",
			"  description:${1:'OK'}",
			" 400:",
			"  description:|",
			"   '${2:'Email is required'}'",
			"   '${3:'Password is required'}"
		],
		"description": "Generate Multiple Example"
	}
}
